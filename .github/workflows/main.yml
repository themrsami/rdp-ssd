name: High-Performance RDP Tunnel

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Enable RDP and Optimize Windows
      run: |
        # Enable Remote Desktop and configure firewall
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        
        # Set up RDP user account
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        
        # Optimize Windows for performance
        Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects' -Name 'VisualFXSetting' -Value 2
        Set-ItemProperty -Path 'HKCU:\Control Panel\Desktop' -Name 'UserPreferencesMask' -Value ([byte[]](0x90,0x12,0x01,0x80,0x10,0x00,0x00,0x00))
        
        # Disable unnecessary services
        $servicesToDisable = @("SysMain", "WSearch", "WerSvc", "DiagTrack")
        foreach ($service in $servicesToDisable) {
          Stop-Service -Name $service -Force
          Set-Service -Name $service -StartupType Disabled
        }
        
        # Set power plan to high performance
        powercfg /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c
        
        # Optimize network settings
        Set-NetTCPSetting -SettingName InternetCustom -AutoTuningLevelLocal Normal
        Set-NetOffloadGlobalSetting -ReceiveSegmentCoalescing Enabled
        Set-NetOffloadGlobalSetting -ReceiveSideScaling Enabled
        
        # Optimize RDP settings
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v fEnableTimeZoneRedirection /t REG_DWORD /d 1 /f
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v MaxConnectionTime /t REG_DWORD /d 0 /f
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v MaxDisconnectionTime /t REG_DWORD /d 0 /f
        reg add "HKLM\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services" /v MaxIdleTime /t REG_DWORD /d 0 /f
        
        Restart-Service termservice -Force
      shell: powershell

    - name: Start Serveo Tunnel for RDP
      shell: bash
      run: |
        echo "Starting Serveo tunnel..."
        # Start Serveo tunnel in the background
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=3 -T -R 3389:localhost:3389 serveo.net > serveo_output.txt 2>&1 &
        sleep 10  # Allow time for the tunnel to establish
        # Output the Serveo tunnel URL for verification
        cat serveo_output.txt

    - name: Monitor and Maintain Connection
      run: |
        $duration = 36000  # 10 hours in seconds
        $interval = 300    # Check every 5 minutes
        $startTime = Get-Date
        
        while ($true) {
          $currentTime = Get-Date
          $elapsedTime = ($currentTime - $startTime).TotalSeconds
          
          if ($elapsedTime -ge $duration) {
            Write-Host "Duration limit reached. Exiting."
            break
          }
          
          Write-Host "Current time: $currentTime - Connection active"
          
          # Check if RDP service is running
          $rdpService = Get-Service termservice
          if ($rdpService.Status -ne 'Running') {
            Write-Host "RDP service not running. Restarting..."
            Restart-Service termservice -Force
          }
          
          # Check if Serveo tunnel is active
          $serveoProcess = Get-Process | Where-Object { $_.CommandLine -like '*serveo.net*' }
          if (-not $serveoProcess) {
            Write-Host "Serveo tunnel not active. Restarting..."
            Start-Process powershell -ArgumentList "-Command ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=3 -T -R 3389:localhost:3389 serveo.net"
          }
          
          Start-Sleep -Seconds $interval
        }
      shell: powershell
